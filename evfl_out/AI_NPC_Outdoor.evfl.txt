flow ApproachBuildMarket:
    if event_flag_npc['cNpcTemp:MarketBuildingTalk']:
        if MainNpc.CheckCurrentNpcAIState('cPreActiveApproach') == 0:
            run ToActiveApproachNotice
        else:
            MainNpc.SetIsStartNeedActivity('cOff')
            MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
        EventFlowSystemActor.ExitFlowchart()
    return

flow ApproachEaster:
    if event_flag_npc['cNpcTemp:EasterRecipeTalk']:
        if MainNpc.CheckCurrentNpcAIState('cPreActiveApproach') == 0:
            run ToActiveApproachNotice
        else:
            MainNpc.SetIsStartNeedActivity('cOff')
            MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
        EventFlowSystemActor.ExitFlowchart()
    return

flow ApproachEmoticons:
    if not ((event_flags_system['cPlayer:EnableEmoticonUI']) and ((MainNpc.EmoticonCanGet()) or (event_flags_system['cPlayer:GetEmoticonTodayFlag']) or (not ((event_flags_system['cPlayer:NnpcApproachNoEmoticonCount'] >= 3) or (EventFlowSystemActor.PercentChoice(50)))))):
        if MainNpc.CheckCurrentNpcAIState('cPreActiveApproach') == 0:
            run ToActiveApproachNotice
        else:
            MainNpc.SetIsStartNeedActivity('cOff')
            MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
        EventFlowSystemActor.ExitFlowchart()
    return

flow ApproachFireworks:
    if event_flag_npc['cNpcTemp:FireworksItemTalk']:
        if MainNpc.CheckCurrentNpcAIState('cPreActiveApproach') == 0:
            run ToActiveApproachNotice
        else:
            MainNpc.SetIsStartNeedActivity('cOff')
            MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
        EventFlowSystemActor.ExitFlowchart()
    return

flow ApproachIslandRep:
    if (event_flag_npc['cNpcTemp:IslandRepTalk']) and ((event_flags_system['cLand:CountAppE_RepTalk'] == 0) or (event_flags_system['cPlayer:NnpcApproachNoIslandRepCount'] >= 2) or (EventFlowSystemActor.PercentChoice(33))):
        if MainNpc.CheckCurrentNpcAIState('cPreActiveApproach') == 0:
            run ToActiveApproachNotice
        else:
            MainNpc.SetIsStartNeedActivity('cOff')
            MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
        EventFlowSystemActor.ExitFlowchart()
    return

flow ApproachMoveinGift:
    if event_flag_npc['cNpcTemp:AppFirstTalk']:
        if MainNpc.CheckCurrentNpcAIState('cPreActiveApproach') == 0:
            run ToActiveApproachNotice
        else:
            MainNpc.SetIsStartNeedActivity('cOff')
            MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
        EventFlowSystemActor.ExitFlowchart()
    return

flow ApproachMoving:
    fEvent83 = MainNpc.NpcMoveOutState()
    if fEvent83 == 2:
        if (event_flag_npc['cNpcMemory:NextMoveOutTalk']) and (not event_flag_npc['cNpcMemory:MoveCancelTalk']):
            MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
            EventFlowSystemActor.ExitFlowchart()
    elif fEvent83 == 1:
        if MainNpc.CheckNpcTool() in (0, 1, 2, 3, 4):
            MainNpc.NpcChangeAIState('cPassiveApproach', 'NNPC_ApproachD', 'Moving', '', false, true)
        else:
            MainNpc.NpcChangeAIState('cPassiveApproach', 'NNPC_ApproachD', 'Moving', '', false, false)
        run PassiveBln
        EventFlowSystemActor.ExitFlowchart()
    elif fEvent83 == 3:
        if not event_flag_npc['cNpcMemory:NextMoveOutTalk']:
            if MainNpc.CheckNpcTool() in (0, 1, 2, 3, 4):
                MainNpc.NpcChangeAIState('cPassiveApproach', 'NNPC_ApproachD', 'Moving', '', false, true)
            else:
                MainNpc.NpcChangeAIState('cPassiveApproach', 'NNPC_ApproachD', 'Moving', '', false, false)
            run PassiveBln
            EventFlowSystemActor.ExitFlowchart()
    return

flow ApproachNormal:
    if MainNpc.CheckCurrentNpcAIState('cPreActiveApproach') == 0:
        run ToActiveApproachNotice
        EventFlowSystemActor.ExitFlowchart()
    elif EventFlowSystemActor.RandomChoiceExcludePrevious2(2, true) != 0:
        MainNpc.SetIsStartNeedActivity('cOff')
        MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
        EventFlowSystemActor.ExitFlowchart()
    elif MainNpc.CheckNpcTool() in (0, 1, 2, 3, 4):
        MainNpc.NpcChangeAIState('cPassiveApproach', 'NNPC_Approach', '', '', false, true)
        run PassiveBln
        EventFlowSystemActor.ExitFlowchart()
    else:
        MainNpc.NpcChangeAIState('cPassiveApproach', 'NNPC_Approach', '', '', false, false)
        run PassiveBln
        EventFlowSystemActor.ExitFlowchart()
    return

flow ApproachWelcomeMigrant:
    if event_flag_npc['cNpcTemp:AppWelcomeMigrantsTalk']:
        if MainNpc.CheckCurrentNpcAIState('cPreActiveApproach') == 0:
            run ToActiveApproachNotice
        else:
            MainNpc.SetIsStartNeedActivity('cOff')
            MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
        EventFlowSystemActor.ExitFlowchart()
    return

flow Countdown:
    if MainNpc.NpcNowPosture() == 0:
        if event_flag_npc['cNpcTemp:WearNewYearHat']:
            event_flags_npc['cNpcTemp:WearNewYearHat'] = false
            MainNpc.NpcChangeAIState('cWearNewYearHat', '', '', '', false, false)
            EventFlowSystemActor.ExitFlowchart()
        else:
            fEvent121 = MainNpc.DevideCountDownState()
            if fEvent121 == 4:
                if MainNpc.NpcIsEquipedHandTool(1):
                    if not MainNpc.IsInEventPlazaArea(false):
                        MainNpc.NpcChangeGoToDestinationState('cGoToDestination', '', '', '', false, false, 2, -1, -1)
                        EventFlowSystemActor.ExitFlowchart()
                    elif (MainNpc.CheckCurrentNpcAIState('cEventPlazaWanderWait') != 0) and (MainNpc.CheckCurrentNpcAIState('cEventPlazaWander') != 0):
                        MainNpc.NpcChangeAIState('cEventPlazaWander', '', '', '', false, false)
                        EventFlowSystemActor.ExitFlowchart()
                    else:
                        EventFlowSystemActor.ExitFlowchart()
                else:
                    MainNpc.NpcChangeChangeHandToolState('cChangeHandToolSimple', '', '', '', false, false, 5741)
                    EventFlowSystemActor.ExitFlowchart()
            elif fEvent121 == 1:
                MainNpc.NpcChangeAIState('cBlockWander', '', '', '', false, true)
                EventFlowSystemActor.ExitFlowchart()
            elif fEvent121 == 2:
                if event_flag_npc['cNpcTemp:GotoEventPlazaForCountdown']:
                    if not MainNpc.IsInEventPlazaArea(false):
                        MainNpc.NpcChangeGoToDestinationState('cGoToDestination', '', '', '', false, false, 2, -1, -1)
                        EventFlowSystemActor.ExitFlowchart()
                    elif (MainNpc.CheckCurrentNpcAIState('cEventPlazaWanderWait') != 0) and (MainNpc.CheckCurrentNpcAIState('cEventPlazaWander') != 0):
                        MainNpc.NpcChangeAIState('cEventPlazaWander', '', '', '', false, false)
                        EventFlowSystemActor.ExitFlowchart()
                    else:
                        EventFlowSystemActor.ExitFlowchart()
                elif MainNpc.IsInEventPlazaArea(false):
                    event_flags_npc['cNpcTemp:GotoEventPlazaForCountdown'] = true
                    MainNpc.NpcChangeAIState('cEventPlazaWander', '', '', '', false, false)
                    EventFlowSystemActor.ExitFlowchart()
                else:
                    MainNpc.NpcChangeAIState('cBlockWander', '', '', '', false, true)
                    EventFlowSystemActor.ExitFlowchart()
            elif fEvent121 == 7:
                MainNpc.SetNpcFeel('cHappy', -1)
                fEvent145 = MainNpc.CountdownTalkPrevState()
                if fEvent145 == 0:
                    if not event_flag_npc['cNpcTemp:GotoEventPlazaForCountdown']:
                        MainNpc.NpcChangeAIState('cBlockWander', '', '', '', false, true)
                        EventFlowSystemActor.ExitFlowchart()
                    elif not MainNpc.NpcIsEquipedHandTool(1):
                        MainNpc.NpcChangeChangeHandToolState('cChangeHandToolSimple', '', '', '', false, false, 5741)
                        EventFlowSystemActor.ExitFlowchart()
                    elif MainNpc.IsInEventPlazaArea(false):
                        MainNpc.NpcChangeAIState('cNewYearWanderWait', '', '', '', false, false)
                        EventFlowSystemActor.ExitFlowchart()
                    else:
                        MainNpc.NpcChangeGoToDestinationState('cGoToDestination', '', '', '', false, false, 2, -1, -1)
                        EventFlowSystemActor.ExitFlowchart()
                elif fEvent145 == 1:
                    MainNpc.NpcChangeAIState('cSwingStickLight', '', '', '', false, false)
                    EventFlowSystemActor.ExitFlowchart()
                elif fEvent145 == 2:
                    MainNpc.NpcChangeAIState('cUseCracker', '', '', '', false, false)
                    EventFlowSystemActor.ExitFlowchart()
                elif fEvent145 == 3:
                    MainNpc.NpcChangeAIState('cLookFireworksAndClap', '', '', '', false, false)
                    EventFlowSystemActor.ExitFlowchart()
            elif fEvent121 == 8:
                MainNpc.SetNpcFeel('cNormal', -1)
                MainNpc.NpcChangeAIState('cBlockWander', '', '', '', false, true)
                EventFlowSystemActor.ExitFlowchart()
            elif fEvent121 == 6:
                event_flags_npc['cNpcTemp:GotoCountdownBoard'] = false
                MainNpc.NpcChangeAIState('cCountdownWait', '', '', '', false, false)
                EventFlowSystemActor.ExitFlowchart()
            elif fEvent121 == 3:
                if not MainNpc.IsInEventPlazaArea(false):
                    MainNpc.NpcChangeGoToDestinationState('cGoToDestination', '', '', '', false, false, 2, -1, -1)
                    EventFlowSystemActor.ExitFlowchart()
                elif (MainNpc.CheckCurrentNpcAIState('cEventPlazaWanderWait') != 0) and (MainNpc.CheckCurrentNpcAIState('cEventPlazaWander') != 0):
                    MainNpc.NpcChangeAIState('cEventPlazaWander', '', '', '', false, false)
                    EventFlowSystemActor.ExitFlowchart()
                else:
                    EventFlowSystemActor.ExitFlowchart()
            elif fEvent121 == 5:
                if MainNpc.IsInEventPlazaArea(true):
                    if (event_flag_npc['cNpcTemp:GotoCountdownBoard']) and (MainNpc.CheckCurrentNpcAIState('cGoToDestination') == 0):
                        if MainNpc.NpcAIIsArriveDestination() == 0:
                            event_flags_npc['cNpcTemp:GotoCountdownBoard'] = false
                            MainNpc.NpcChangeAIState('cCountdownWait', '', '', '', false, false)
                            EventFlowSystemActor.ExitFlowchart()
                        else:
                            EventFlowSystemActor.ExitFlowchart()
                    else:
                        MainNpc.NpcChangeAIState('cCountdownWait', '', '', '', false, false)
                        EventFlowSystemActor.ExitFlowchart()
                elif event_flag_npc['cNpcTemp:GotoCountdownBoard']:
                    MainNpc.NpcChangeGoToDestinationState('cGoToDestination', '', '', '', false, false, 3, -1, -1)
                    EventFlowSystemActor.ExitFlowchart()
                else:
                    event_flags_npc['cNpcTemp:GotoCountdownBoard'] = true
                    MainNpc.NpcChangeGoToDestinationState('cGoToDestination', '', '', '', true, false, 3, -1, -1)
                    EventFlowSystemActor.ExitFlowchart()
    return

flow FallPit:
    MainNpc.NpcAISetting(2, false)
    MainNpc.NpcAISetting(3, false)
    MainNpc.NpcAISetting(8, true)
    MainNpc.NpcChangeAIState('cFallPit', 'NNPC_Reaction_Fall', '', '', false, false)
    return

flow Fireworks:
    fEvent210 = MainNpc.DevideFireWorksEventState()
    if fEvent210 == 5:
        MainNpc.SetDefaultWaitAs('cDefault')
        run ResetFeel
        if MainNpc.NpcCheckStateSelectTiming('cChangeMainPlayer'):
            EventFlowSystemActor.ExitFlowchart()
        else:
            fEvent224 = MainNpc.FireworksTalkPrevState()
            if fEvent224 == 1:
                MainNpc.NpcChangeAIState('cPlayFirework', 'NNPC_Talk_Sequence', 'Root', '', false, false)
                EventFlowSystemActor.ExitFlowchart()
            elif fEvent224 == 2:
                MainNpc.NpcChangeAIState('cLookFireworks', 'NNPC_Talk_Sequence', 'Root', '', false, false)
                EventFlowSystemActor.ExitFlowchart()
            elif fEvent224 == 3:
                MainNpc.NpcChangeAIState('cFireworksSitBench', 'NNPC_Talk_Sequence', 'Root', '', false, false)
                EventFlowSystemActor.ExitFlowchart()
            elif fEvent224 == 0:
                if MainNpc.NpcNowPosture() not in (0, 2, 3):
                    MainNpc.NpcChangeAIState('cFireworksSitBench', 'NNPC_Talk_Sequence', 'Root', '', false, false)
                    EventFlowSystemActor.ExitFlowchart()
                elif event_flag_npc['cNpcTemp:FireworksAroundWater']:
                    MainNpc.NpcChangeAIState('cFireworksWanderWait', 'NNPC_Talk_Sequence', 'Root', '', false, true)
                    EventFlowSystemActor.ExitFlowchart()
                else:
                    if MainNpc.IsInEventPlazaArea(false):
                        event_flags_npc['cNpcTemp:FireworksAroundWater'] = false
                        event_flags_npc['cNpcTemp:ArrivedInEventPlaza'] = true
                        MainNpc.NpcChangeAIState('cFireworksWanderWait', 'NNPC_Talk_Sequence', 'Root', '', false, true)
                        EventFlowSystemActor.ExitFlowchart()
                    else:
                        MainNpc.NpcChangeGoToDestinationState('cGoToDestination', 'Root', 'NNPC_Talk_Sequence', '', false, true, 2, -1, -1)
                        EventFlowSystemActor.ExitFlowchart()
    elif fEvent210 == 4:
        MainNpc.SetDefaultWaitAs('cDefault')
        MainNpc.NpcChangeAIState('cFireworksStartReaction', 'NNPC_Talk_Sequence', '', '', false, false)
        run ResetFeel
        EventFlowSystemActor.ExitFlowchart()
    elif fEvent210 == 3:
        MainNpc.SetDefaultWaitAs('cDefault')
        MainNpc.NpcChangeAIState('cFireworksStartWait', 'NNPC_Talk_Sequence', '', '', false, true)
        run ResetFeel
        EventFlowSystemActor.ExitFlowchart()
    elif fEvent210 == 1:
        MainNpc.SetDefaultWaitAs('cDefault')
        if event_flag_npc['cNpcTemp:GotoEventPlazaForCountdown']:
            if event_flag_npc['cNpcTemp:FireworksAroundWater']:
                MainNpc.NpcChangeAIState('cFireworksWanderWait', 'NNPC_Talk_Sequence', '', '', false, true)
                EventFlowSystemActor.ExitFlowchart()
            elif MainNpc.IsInEventPlazaArea(false):
                event_flags_npc['cNpcTemp:GotoEventPlazaForCountdown'] = true
                event_flags_npc['cNpcTemp:ArrivedInEventPlaza'] = true
                if (MainNpc.CheckCurrentNpcAIState('cEventPlazaWanderWait') != 0) and (MainNpc.CheckCurrentNpcAIState('cEventPlazaWander') != 0):
                    MainNpc.NpcChangeAIState('cEventPlazaWander', 'NNPC_Talk_Sequence', '', '', false, true)
                    EventFlowSystemActor.ExitFlowchart()
                else:
                    MainNpc.SetNpcTalkFlowName('NNPC_Talk_Sequence', 'Root')
                    EventFlowSystemActor.ExitFlowchart()
            else:
                MainNpc.NpcChangeGoToDestinationState('cGoToDestination', '', 'NNPC_Talk_Sequence', '', false, true, 2, -1, -1)
                EventFlowSystemActor.ExitFlowchart()
        elif MainNpc.IsInEventPlazaArea(false):
            event_flags_npc['cNpcTemp:GotoEventPlazaForCountdown'] = true
            event_flags_npc['cNpcTemp:FireworksAroundWater'] = false
            event_flags_npc['cNpcTemp:ArrivedInEventPlaza'] = true
            MainNpc.NpcChangeAIState('cEventPlazaWander', 'NNPC_Talk_Sequence', '', '', false, true)
            EventFlowSystemActor.ExitFlowchart()
        else:
            MainNpc.NpcChangeAIState('cBlockWander', 'NNPC_Talk_Sequence', '', '', false, true)
            EventFlowSystemActor.ExitFlowchart()
    elif fEvent210 == 2:
        MainNpc.SetDefaultWaitAs('cDefault')
        if event_flag_npc['cNpcTemp:FireworksAroundWater']:
            MainNpc.NpcChangeAIState('cFireworksWanderWait', 'NNPC_Talk_Sequence', '', '', false, true)
            EventFlowSystemActor.ExitFlowchart()
        elif MainNpc.IsInEventPlazaArea(false):
            event_flags_npc['cNpcTemp:GotoEventPlazaForCountdown'] = true
            event_flags_npc['cNpcTemp:ArrivedInEventPlaza'] = true
            if (MainNpc.CheckCurrentNpcAIState('cEventPlazaWanderWait') != 0) and (MainNpc.CheckCurrentNpcAIState('cEventPlazaWander') != 0):
                MainNpc.NpcChangeAIState('cEventPlazaWander', 'NNPC_Talk_Sequence', '', '', false, true)
                EventFlowSystemActor.ExitFlowchart()
            else:
                MainNpc.SetNpcTalkFlowName('NNPC_Talk_Sequence', 'Root')
                EventFlowSystemActor.ExitFlowchart()
        else:
            MainNpc.NpcChangeGoToDestinationState('cGoToDestination', '', 'NNPC_Talk_Sequence', '', false, true, 2, -1, -1)
            EventFlowSystemActor.ExitFlowchart()
    return

flow Hit:
    if not ((MainNpc.NpcIsHitByNet()) and (MainNpc.NpcIsFleaHolder())):
        if (MainNpc.NpcHitNum(3)) and (event_flag_npc['cNpcMemory:HasAcquaintanceship']):
            MainNpc.NpcChangeAIState('cHit', 'NNPC_Talk_Force', 'Hit', 'Hit', false, false)
            MainNpc.NpcAISetting(8, true)
            MainNpc.SetNpcFeel('cNormal', -1)
            MainNpc.NpcSetAIBlackBoard('WeightReset', 1)
            run SitDisableTurn
            MainNpc.NpcClearHitParam()
        else:
            MainNpc.NpcChangeAIState('cHit', '', '', '', false, false)
    elif (event_flag_npc['cNpcTemp:HitMainPlayer']) and (event_flag_npc['cNpcMemory:HasAcquaintanceship']):
        MainNpc.NpcChangeAIState('cHit', 'NNPC_Talk_Force', 'Flea', 'Flea', false, false)
        MainNpc.NpcAISetting(8, true)
        MainNpc.SetNpcFeel('cNormal', -1)
        MainNpc.NpcSetAIBlackBoard('WeightReset', 1)
        run SitDisableTurn
        MainNpc.NpcClearHitParam()
    else:
        MainNpc.NpcChangeAIState('cHit', '', '', '', false, false)
    return

flow Init:
    MainNpc.NpcRegistAIBlackBoard('WeightReset', 0)
    return

flow PassiveBln:
    if EventFlowSystemActor.RandomChoiceExcludePrevious2(2, true) == 0:
        MainNpc.NpcBalloonRequest('cAppearNear', 'System/Balloon/BLN_Approach:03_BO', 'ApproachPassive', 0)
    else:
        MainNpc.NpcBalloonRequest('cAppearNear', 'System/Balloon/BLN_Approach:04_BO', 'ApproachPassive', 0)
    return

flow PlayerBirthdayCall:
    run AI_NPC_Common::ContinueSpeak
    return

flow Push:
    MainNpc.SetNpcFeel('cNormal', -1)
    run AI_NPC_Common::ContinueSpeak
    return

flow ResetFeel:
    if MainNpc.CheckNowNpcFeel() in (2, 3, 4):
        MainNpc.SetNpcFeel('cNormal', -1)
    return

flow Root:
    MainNpc.NpcAIDefaultSetting(1)
    if MainNpc.NpcBlackBoard('WeightReset', 1):
        MainNpc.NpcSetAIBlackBoard('WeightReset', 0)
        MainNpc.NpcAISetting(8, false)
    MainNpc.SetIsStartNeedActivity('cOff')
    if event_flag_npc['cNpcTemp:PlayerBirthdayCall']:
        MainNpc.NpcChangeAIState('cPlayerBDCall', 'NNPC_GEvent_BirthdayP_H', 'Root_1_Field', '', false, false)
    elif event_flag_npc['cNpcTemp:FallPit']:
        run FallPit
    else:
        fEvent34 = MainNpc.IsWarningInsect()
        if fEvent34 == 1:
            MainNpc.NpcChangeAIState('cWarningInsect', '', '', '', false, false)
        elif fEvent34 == 0:
            MainNpc.NpcAISetting(2, false)
            MainNpc.NpcAISetting(3, false)
            MainNpc.NpcChangeAIState('cWarningInsect', 'NNPC_Reaction_Poison', '', '', false, false)
        elif fEvent34 == 2:
            if (MainNpc.CheckNpcAIFlag('cIsCreateInStage')) and (MainNpc.NpcCheckStateSelectTiming('cInit')):
                MainNpc.NpcChangeAIState('cLeaveHome', '', '', '', false, true)
            else:
                run Countdown
                run Fireworks
                if MainNpc.IsApproachAllowed():
                    if MainNpc.CheckCurrentNpcAIState('cPassiveApproach') == 1:
                        if MainNpc.CheckCurrentNpcAIState('cPreActiveApproach') != 0:
                            run ApproachMoveinGift
                            run ApproachIslandRep
                            run ApproachWelcomeMigrant
                            run ApproachBuildMarket
                            run ApproachMoving
                            run ApproachEaster
                            run ApproachEmoticons
                            run ApproachNormal
                        elif MainNpc.NpcCanStartApproach():
                            run ApproachMoveinGift
                            run ApproachIslandRep
                            run ApproachWelcomeMigrant
                            run ApproachBuildMarket
                            if (MainNpc.NpcMoveOutState() not in (0, 1, 3, 4)) and (not event_flag_npc['cNpcMemory:MoveCancelTalk']) and (event_flag_npc['cNpcMemory:NextMoveOutTalk']) and (not event_flag_npc['cNpcMemory:ChokeOffMoveOut']):
                                run ToActiveApproachNotice
                            else:
                                run ApproachEaster
                                run ApproachEmoticons
                                run ApproachNormal
                        else:
                            MainNpc.NpcChangeAIState('cPreActiveApproach', '', '', '', false, false)
                elif MainNpc.ToCatnap():
                    MainNpc.NpcAISetting(2, false)
                    MainNpc.NpcAISetting(3, false)
                    MainNpc.NpcAISetting(14, true)
                    MainNpc.NpcChangeAIState('cStandSleep', 'NNPC_Reaction_Napping', '', '', false, false)
                elif event_flags_npc['cNpcSave:OutdoorCatnap'] != 3:
                    MainNpc.NpcChangeAIState('cGoHome', 'NNPC_Talk_Sequence', '', '', true, false)
                elif MainNpc.LookToSky():
                    MainNpc.NpcChangeAIState('cLookToSky', 'NNPC_Talk_Sequence', '', '', true, false)
                else:
                    MainNpc.NpcChangeHeadCtrlMode('cNormal', true)
                    MainNpc.SetIsStartNeedActivity('cOn')
    return

flow SitDisableTurn:
    if MainNpc.NpcIsSitting() in (0, 1, 2, 3, 5):
        MainNpc.NpcAISetting(2, false)
    return

flow ToActiveApproachNotice:
    if MainNpc.CheckNpcTool() in (0, 1, 2, 3, 4):
        MainNpc.NpcChangeAIState('cActiveApproachNotice', 'TalkFlowName', 'TalkEntryName', '', false, true)
    else:
        MainNpc.NpcChangeAIState('cActiveApproachNotice', 'TalkFlowName', 'TalkEntryName', '', false, false)
    return

flow cActiveApproachNotice_State:
    if MainNpc.CheckNpcTool() in (0, 1, 2, 3, 4):
        MainNpc.NpcChangeAIState('cActiveApproach', '', '', '', false, true)
    else:
        MainNpc.NpcChangeAIState('cActiveApproach', '', '', '', false, false)
    if EventFlowSystemActor.RandomChoiceExcludePrevious2(2, true) == 0:
        MainNpc.NpcBalloonRequest('cAppearNear', 'System/Balloon/BLN_Approach:01_BO', '', 0)
    else:
        MainNpc.NpcBalloonRequest('cAppearNear', 'System/Balloon/BLN_Approach:02_BO', '', 0)
    return

flow cHit_State:
    run Root
    MainNpc.NpcSetHitTimer(60)
    return

flow cHit_State_Flea:
    run AI_NPC_Common::ContinueSpeak
entrypoint Event22:
    MainNpc.NpcClearHitParam()
    return

flow cHit_State_Hit:
    run AI_NPC_Common::ContinueSpeak
    run Event22
    return

